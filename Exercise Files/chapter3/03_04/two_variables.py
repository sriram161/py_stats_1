#%% Change working directory from the workspace root to the ipynb file location. Turn this addition off with the DataScience.changeDirOnImportExport setting
import os
try:
	os.chdir(os.path.join(os.getcwd(), 'Exercise Files\chapter3\03_04'))
	print(os.getcwd())
except:
	pass
#%% [markdown]
# ## Python statistics essential training - 03_04_twovariables
#%% [markdown]
# Standard imports

#%%
import numpy as np
import scipy.stats
import pandas as pd


#%%
import matplotlib
import matplotlib.pyplot as pp

from IPython import display
from ipywidgets import interact, widgets

get_ipython().run_line_magic('matplotlib', 'inline')


#%%
import re
import mailbox
import csv




#%%
gapminder = pd.read_csv("Exercise Files/chapter3/03_04/gapminder.csv")

#%%
# Plotting 2 variables togather lets us hypothesis the probable relation between them 
# are the rise and fall togather?
# The change in one is causing the change in another?

#%%
gapminder.info()

#%%
italy = gapminder.query('country == "Italy"')

#%%
italy.head()

#%%
italy.plot.scatter('year', 'population')
# Observation_plot: The the points are getting denser as years pass.

#%%
gapminder.query('country == "India"').plot.scatter('year', 'population')

#%%
italy.plot.scatter('year', 'gdp_per_day', logy=True)
# semi log plot on the (log on y-axis and linear on x-axis)
#%%
italy.plot.scatter('gdp_per_day', 'life_expectancy' , logx=True)
# Observation_plot: Even if income decrease the life_expectance increase.
#%%
size = np.where(italy.year % 10 == 0,30,2) # creates a array where condition is true it will fill array with 30 else 2
italy.plot.scatter('gdp_per_day', 'life_expectancy', logx=True, s=size)

#%%
data = gapminder.query('country in ["United States", "Italy"]')

#%%
size = np.where(data.year % 10 == 0, 30,2)
color = np.where(data.country == 'Italy','blue', 'orange')
data.plot.scatter('gdp_per_day', 'life_expectancy', logx=True, s=size, c=color)
# Observation_plot: The progress of the two countries is simillar with US a bit richer.

#%%
data = gapminder.query('country in ["United States", "China"]')
size = np.where(data.year % 10 == 0, 30, 2)
color = np.where(data.country == 'United States','blue', 'red')
ax = data.plot.scatter('gdp_per_day', 'life_expectancy', logx=True, s=size, c=color)
data[data.country == 'China'].plot.line(x='gdp_per_day', y='life_expectancy', ax=ax)
# In 1959 there is a famine and poor agricultural policies  that led to death of the people which dragged the life expectancy down.
#%%
# Matplotlib trick save the plot object generated by previous statement and pass it as argument to
# the next statement to plot statement will make matplotlib to plot them on the save graph.